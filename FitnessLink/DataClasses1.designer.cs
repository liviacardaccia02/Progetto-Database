#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PROVA
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FitnessLink")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definizioni metodo Extensibility
    partial void OnCreated();
    partial void InsertAGGIUNTA(AGGIUNTA instance);
    partial void UpdateAGGIUNTA(AGGIUNTA instance);
    partial void DeleteAGGIUNTA(AGGIUNTA instance);
    partial void InsertVISITA(VISITA instance);
    partial void UpdateVISITA(VISITA instance);
    partial void DeleteVISITA(VISITA instance);
    partial void InsertUTENTE(UTENTE instance);
    partial void UpdateUTENTE(UTENTE instance);
    partial void DeleteUTENTE(UTENTE instance);
    partial void InsertPOST(POST instance);
    partial void UpdatePOST(POST instance);
    partial void DeletePOST(POST instance);
    partial void InsertMISURAZIONE_CORPOREA(MISURAZIONE_CORPOREA instance);
    partial void UpdateMISURAZIONE_CORPOREA(MISURAZIONE_CORPOREA instance);
    partial void DeleteMISURAZIONE_CORPOREA(MISURAZIONE_CORPOREA instance);
    partial void InsertMEDICO(MEDICO instance);
    partial void UpdateMEDICO(MEDICO instance);
    partial void DeleteMEDICO(MEDICO instance);
    partial void InsertINTERAZIONE(INTERAZIONE instance);
    partial void UpdateINTERAZIONE(INTERAZIONE instance);
    partial void DeleteINTERAZIONE(INTERAZIONE instance);
    partial void InsertESERCIZIO(ESERCIZIO instance);
    partial void UpdateESERCIZIO(ESERCIZIO instance);
    partial void DeleteESERCIZIO(ESERCIZIO instance);
    partial void InsertAMICIZIA(AMICIZIA instance);
    partial void UpdateAMICIZIA(AMICIZIA instance);
    partial void DeleteAMICIZIA(AMICIZIA instance);
    partial void InsertALLENAMENTO(ALLENAMENTO instance);
    partial void UpdateALLENAMENTO(ALLENAMENTO instance);
    partial void DeleteALLENAMENTO(ALLENAMENTO instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::PROVA.Properties.Settings.Default.FitnessLinkConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AGGIUNTA> AGGIUNTA
		{
			get
			{
				return this.GetTable<AGGIUNTA>();
			}
		}
		
		public System.Data.Linq.Table<VISITA> VISITA
		{
			get
			{
				return this.GetTable<VISITA>();
			}
		}
		
		public System.Data.Linq.Table<UTENTE> UTENTE
		{
			get
			{
				return this.GetTable<UTENTE>();
			}
		}
		
		public System.Data.Linq.Table<POST> POST
		{
			get
			{
				return this.GetTable<POST>();
			}
		}
		
		public System.Data.Linq.Table<MISURAZIONE_CORPOREA> MISURAZIONE_CORPOREA
		{
			get
			{
				return this.GetTable<MISURAZIONE_CORPOREA>();
			}
		}
		
		public System.Data.Linq.Table<MEDICO> MEDICO
		{
			get
			{
				return this.GetTable<MEDICO>();
			}
		}
		
		public System.Data.Linq.Table<INTERAZIONE> INTERAZIONE
		{
			get
			{
				return this.GetTable<INTERAZIONE>();
			}
		}
		
		public System.Data.Linq.Table<ESERCIZIO> ESERCIZIO
		{
			get
			{
				return this.GetTable<ESERCIZIO>();
			}
		}
		
		public System.Data.Linq.Table<AMICIZIA> AMICIZIA
		{
			get
			{
				return this.GetTable<AMICIZIA>();
			}
		}
		
		public System.Data.Linq.Table<ALLENAMENTO> ALLENAMENTO
		{
			get
			{
				return this.GetTable<ALLENAMENTO>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AGGIUNTA")]
	public partial class AGGIUNTA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NomeEsercizio;
		
		private string _GruppoMuscolareEsercizio;
		
		private int _CodiceAllenamento;
		
		private EntityRef<ESERCIZIO> _ESERCIZIO;
		
		private EntityRef<ALLENAMENTO> _ALLENAMENTO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeEsercizioChanging(string value);
    partial void OnNomeEsercizioChanged();
    partial void OnGruppoMuscolareEsercizioChanging(string value);
    partial void OnGruppoMuscolareEsercizioChanged();
    partial void OnCodiceAllenamentoChanging(int value);
    partial void OnCodiceAllenamentoChanged();
    #endregion
		
		public AGGIUNTA()
		{
			this._ESERCIZIO = default(EntityRef<ESERCIZIO>);
			this._ALLENAMENTO = default(EntityRef<ALLENAMENTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeEsercizio", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NomeEsercizio
		{
			get
			{
				return this._NomeEsercizio;
			}
			set
			{
				if ((this._NomeEsercizio != value))
				{
					if (this._ESERCIZIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNomeEsercizioChanging(value);
					this.SendPropertyChanging();
					this._NomeEsercizio = value;
					this.SendPropertyChanged("NomeEsercizio");
					this.OnNomeEsercizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GruppoMuscolareEsercizio", DbType="VarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string GruppoMuscolareEsercizio
		{
			get
			{
				return this._GruppoMuscolareEsercizio;
			}
			set
			{
				if ((this._GruppoMuscolareEsercizio != value))
				{
					if (this._ESERCIZIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGruppoMuscolareEsercizioChanging(value);
					this.SendPropertyChanging();
					this._GruppoMuscolareEsercizio = value;
					this.SendPropertyChanged("GruppoMuscolareEsercizio");
					this.OnGruppoMuscolareEsercizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceAllenamento", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodiceAllenamento
		{
			get
			{
				return this._CodiceAllenamento;
			}
			set
			{
				if ((this._CodiceAllenamento != value))
				{
					if (this._ALLENAMENTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceAllenamentoChanging(value);
					this.SendPropertyChanging();
					this._CodiceAllenamento = value;
					this.SendPropertyChanged("CodiceAllenamento");
					this.OnCodiceAllenamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESERCIZIO_AGGIUNTA", Storage="_ESERCIZIO", ThisKey="NomeEsercizio,GruppoMuscolareEsercizio", OtherKey="Nome,GruppoMuscolare", IsForeignKey=true)]
		public ESERCIZIO ESERCIZIO
		{
			get
			{
				return this._ESERCIZIO.Entity;
			}
			set
			{
				ESERCIZIO previousValue = this._ESERCIZIO.Entity;
				if (((previousValue != value) 
							|| (this._ESERCIZIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESERCIZIO.Entity = null;
						previousValue.AGGIUNTA.Remove(this);
					}
					this._ESERCIZIO.Entity = value;
					if ((value != null))
					{
						value.AGGIUNTA.Add(this);
						this._NomeEsercizio = value.Nome;
						this._GruppoMuscolareEsercizio = value.GruppoMuscolare;
					}
					else
					{
						this._NomeEsercizio = default(string);
						this._GruppoMuscolareEsercizio = default(string);
					}
					this.SendPropertyChanged("ESERCIZIO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ALLENAMENTO_AGGIUNTA", Storage="_ALLENAMENTO", ThisKey="CodiceAllenamento", OtherKey="CodiceAllenamento", IsForeignKey=true)]
		public ALLENAMENTO ALLENAMENTO
		{
			get
			{
				return this._ALLENAMENTO.Entity;
			}
			set
			{
				ALLENAMENTO previousValue = this._ALLENAMENTO.Entity;
				if (((previousValue != value) 
							|| (this._ALLENAMENTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ALLENAMENTO.Entity = null;
						previousValue.AGGIUNTA.Remove(this);
					}
					this._ALLENAMENTO.Entity = value;
					if ((value != null))
					{
						value.AGGIUNTA.Add(this);
						this._CodiceAllenamento = value.CodiceAllenamento;
					}
					else
					{
						this._CodiceAllenamento = default(int);
					}
					this.SendPropertyChanged("ALLENAMENTO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VISITA")]
	public partial class VISITA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodiceVisita;
		
		private System.DateTime _DataVisita;
		
		private System.TimeSpan _OraVisita;
		
		private decimal _PrezzoVisita;
		
		private int _Paziente;
		
		private string _Medico;
		
		private EntityRef<UTENTE> _UTENTE;
		
		private EntityRef<MEDICO> _MEDICO1;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceVisitaChanging(int value);
    partial void OnCodiceVisitaChanged();
    partial void OnDataVisitaChanging(System.DateTime value);
    partial void OnDataVisitaChanged();
    partial void OnOraVisitaChanging(System.TimeSpan value);
    partial void OnOraVisitaChanged();
    partial void OnPrezzoVisitaChanging(decimal value);
    partial void OnPrezzoVisitaChanged();
    partial void OnPazienteChanging(int value);
    partial void OnPazienteChanged();
    partial void OnMedicoChanging(string value);
    partial void OnMedicoChanged();
    #endregion
		
		public VISITA()
		{
			this._UTENTE = default(EntityRef<UTENTE>);
			this._MEDICO1 = default(EntityRef<MEDICO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceVisita", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CodiceVisita
		{
			get
			{
				return this._CodiceVisita;
			}
			set
			{
				if ((this._CodiceVisita != value))
				{
					this.OnCodiceVisitaChanging(value);
					this.SendPropertyChanging();
					this._CodiceVisita = value;
					this.SendPropertyChanged("CodiceVisita");
					this.OnCodiceVisitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataVisita", DbType="Date NOT NULL")]
		public System.DateTime DataVisita
		{
			get
			{
				return this._DataVisita;
			}
			set
			{
				if ((this._DataVisita != value))
				{
					this.OnDataVisitaChanging(value);
					this.SendPropertyChanging();
					this._DataVisita = value;
					this.SendPropertyChanged("DataVisita");
					this.OnDataVisitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OraVisita", DbType="Time NOT NULL")]
		public System.TimeSpan OraVisita
		{
			get
			{
				return this._OraVisita;
			}
			set
			{
				if ((this._OraVisita != value))
				{
					this.OnOraVisitaChanging(value);
					this.SendPropertyChanging();
					this._OraVisita = value;
					this.SendPropertyChanged("OraVisita");
					this.OnOraVisitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrezzoVisita", DbType="Money NOT NULL")]
		public decimal PrezzoVisita
		{
			get
			{
				return this._PrezzoVisita;
			}
			set
			{
				if ((this._PrezzoVisita != value))
				{
					this.OnPrezzoVisitaChanging(value);
					this.SendPropertyChanging();
					this._PrezzoVisita = value;
					this.SendPropertyChanged("PrezzoVisita");
					this.OnPrezzoVisitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paziente", DbType="Int NOT NULL")]
		public int Paziente
		{
			get
			{
				return this._Paziente;
			}
			set
			{
				if ((this._Paziente != value))
				{
					if (this._UTENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPazienteChanging(value);
					this.SendPropertyChanging();
					this._Paziente = value;
					this.SendPropertyChanged("Paziente");
					this.OnPazienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Medico", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string Medico
		{
			get
			{
				return this._Medico;
			}
			set
			{
				if ((this._Medico != value))
				{
					if (this._MEDICO1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMedicoChanging(value);
					this.SendPropertyChanging();
					this._Medico = value;
					this.SendPropertyChanged("Medico");
					this.OnMedicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTENTE_VISITA", Storage="_UTENTE", ThisKey="Paziente", OtherKey="IDutente", IsForeignKey=true)]
		public UTENTE UTENTE
		{
			get
			{
				return this._UTENTE.Entity;
			}
			set
			{
				UTENTE previousValue = this._UTENTE.Entity;
				if (((previousValue != value) 
							|| (this._UTENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTENTE.Entity = null;
						previousValue.VISITA.Remove(this);
					}
					this._UTENTE.Entity = value;
					if ((value != null))
					{
						value.VISITA.Add(this);
						this._Paziente = value.IDutente;
					}
					else
					{
						this._Paziente = default(int);
					}
					this.SendPropertyChanged("UTENTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEDICO_VISITA", Storage="_MEDICO1", ThisKey="Medico", OtherKey="CF", IsForeignKey=true)]
		public MEDICO MEDICO1
		{
			get
			{
				return this._MEDICO1.Entity;
			}
			set
			{
				MEDICO previousValue = this._MEDICO1.Entity;
				if (((previousValue != value) 
							|| (this._MEDICO1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MEDICO1.Entity = null;
						previousValue.VISITA.Remove(this);
					}
					this._MEDICO1.Entity = value;
					if ((value != null))
					{
						value.VISITA.Add(this);
						this._Medico = value.CF;
					}
					else
					{
						this._Medico = default(string);
					}
					this.SendPropertyChanged("MEDICO1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UTENTE")]
	public partial class UTENTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDutente;
		
		private string _Nome;
		
		private string _Cognome;
		
		private string _Username;
		
		private string _Email;
		
		private System.DateTime _DataRegistrazione;
		
		private string _NumeroTelefono;
		
		private EntitySet<VISITA> _VISITA;
		
		private EntitySet<POST> _POST;
		
		private EntitySet<MISURAZIONE_CORPOREA> _MISURAZIONE_CORPOREA;
		
		private EntitySet<INTERAZIONE> _INTERAZIONE;
		
		private EntitySet<ESERCIZIO> _ESERCIZIO;
		
		private EntitySet<AMICIZIA> _AMICIZIA;
		
		private EntitySet<AMICIZIA> _AMICIZIA1;
		
		private EntitySet<ALLENAMENTO> _ALLENAMENTO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDutenteChanging(int value);
    partial void OnIDutenteChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDataRegistrazioneChanging(System.DateTime value);
    partial void OnDataRegistrazioneChanged();
    partial void OnNumeroTelefonoChanging(string value);
    partial void OnNumeroTelefonoChanged();
    #endregion
		
		public UTENTE()
		{
			this._VISITA = new EntitySet<VISITA>(new Action<VISITA>(this.attach_VISITA), new Action<VISITA>(this.detach_VISITA));
			this._POST = new EntitySet<POST>(new Action<POST>(this.attach_POST), new Action<POST>(this.detach_POST));
			this._MISURAZIONE_CORPOREA = new EntitySet<MISURAZIONE_CORPOREA>(new Action<MISURAZIONE_CORPOREA>(this.attach_MISURAZIONE_CORPOREA), new Action<MISURAZIONE_CORPOREA>(this.detach_MISURAZIONE_CORPOREA));
			this._INTERAZIONE = new EntitySet<INTERAZIONE>(new Action<INTERAZIONE>(this.attach_INTERAZIONE), new Action<INTERAZIONE>(this.detach_INTERAZIONE));
			this._ESERCIZIO = new EntitySet<ESERCIZIO>(new Action<ESERCIZIO>(this.attach_ESERCIZIO), new Action<ESERCIZIO>(this.detach_ESERCIZIO));
			this._AMICIZIA = new EntitySet<AMICIZIA>(new Action<AMICIZIA>(this.attach_AMICIZIA), new Action<AMICIZIA>(this.detach_AMICIZIA));
			this._AMICIZIA1 = new EntitySet<AMICIZIA>(new Action<AMICIZIA>(this.attach_AMICIZIA1), new Action<AMICIZIA>(this.detach_AMICIZIA1));
			this._ALLENAMENTO = new EntitySet<ALLENAMENTO>(new Action<ALLENAMENTO>(this.attach_ALLENAMENTO), new Action<ALLENAMENTO>(this.detach_ALLENAMENTO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDutente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDutente
		{
			get
			{
				return this._IDutente;
			}
			set
			{
				if ((this._IDutente != value))
				{
					this.OnIDutenteChanging(value);
					this.SendPropertyChanging();
					this._IDutente = value;
					this.SendPropertyChanged("IDutente");
					this.OnIDutenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataRegistrazione", DbType="Date NOT NULL")]
		public System.DateTime DataRegistrazione
		{
			get
			{
				return this._DataRegistrazione;
			}
			set
			{
				if ((this._DataRegistrazione != value))
				{
					this.OnDataRegistrazioneChanging(value);
					this.SendPropertyChanging();
					this._DataRegistrazione = value;
					this.SendPropertyChanged("DataRegistrazione");
					this.OnDataRegistrazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroTelefono", DbType="VarChar(10)")]
		public string NumeroTelefono
		{
			get
			{
				return this._NumeroTelefono;
			}
			set
			{
				if ((this._NumeroTelefono != value))
				{
					this.OnNumeroTelefonoChanging(value);
					this.SendPropertyChanging();
					this._NumeroTelefono = value;
					this.SendPropertyChanged("NumeroTelefono");
					this.OnNumeroTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTENTE_VISITA", Storage="_VISITA", ThisKey="IDutente", OtherKey="Paziente")]
		public EntitySet<VISITA> VISITA
		{
			get
			{
				return this._VISITA;
			}
			set
			{
				this._VISITA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTENTE_POST", Storage="_POST", ThisKey="IDutente", OtherKey="Autore")]
		public EntitySet<POST> POST
		{
			get
			{
				return this._POST;
			}
			set
			{
				this._POST.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTENTE_MISURAZIONE_CORPOREA", Storage="_MISURAZIONE_CORPOREA", ThisKey="IDutente", OtherKey="Utente")]
		public EntitySet<MISURAZIONE_CORPOREA> MISURAZIONE_CORPOREA
		{
			get
			{
				return this._MISURAZIONE_CORPOREA;
			}
			set
			{
				this._MISURAZIONE_CORPOREA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTENTE_INTERAZIONE", Storage="_INTERAZIONE", ThisKey="IDutente", OtherKey="Utente")]
		public EntitySet<INTERAZIONE> INTERAZIONE
		{
			get
			{
				return this._INTERAZIONE;
			}
			set
			{
				this._INTERAZIONE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTENTE_ESERCIZIO", Storage="_ESERCIZIO", ThisKey="IDutente", OtherKey="Creatore")]
		public EntitySet<ESERCIZIO> ESERCIZIO
		{
			get
			{
				return this._ESERCIZIO;
			}
			set
			{
				this._ESERCIZIO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTENTE_AMICIZIA", Storage="_AMICIZIA", ThisKey="IDutente", OtherKey="Ricevente")]
		public EntitySet<AMICIZIA> AMICIZIA
		{
			get
			{
				return this._AMICIZIA;
			}
			set
			{
				this._AMICIZIA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTENTE_AMICIZIA1", Storage="_AMICIZIA1", ThisKey="IDutente", OtherKey="Richiedente")]
		public EntitySet<AMICIZIA> AMICIZIA1
		{
			get
			{
				return this._AMICIZIA1;
			}
			set
			{
				this._AMICIZIA1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTENTE_ALLENAMENTO", Storage="_ALLENAMENTO", ThisKey="IDutente", OtherKey="Utente")]
		public EntitySet<ALLENAMENTO> ALLENAMENTO
		{
			get
			{
				return this._ALLENAMENTO;
			}
			set
			{
				this._ALLENAMENTO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VISITA(VISITA entity)
		{
			this.SendPropertyChanging();
			entity.UTENTE = this;
		}
		
		private void detach_VISITA(VISITA entity)
		{
			this.SendPropertyChanging();
			entity.UTENTE = null;
		}
		
		private void attach_POST(POST entity)
		{
			this.SendPropertyChanging();
			entity.UTENTE = this;
		}
		
		private void detach_POST(POST entity)
		{
			this.SendPropertyChanging();
			entity.UTENTE = null;
		}
		
		private void attach_MISURAZIONE_CORPOREA(MISURAZIONE_CORPOREA entity)
		{
			this.SendPropertyChanging();
			entity.UTENTE1 = this;
		}
		
		private void detach_MISURAZIONE_CORPOREA(MISURAZIONE_CORPOREA entity)
		{
			this.SendPropertyChanging();
			entity.UTENTE1 = null;
		}
		
		private void attach_INTERAZIONE(INTERAZIONE entity)
		{
			this.SendPropertyChanging();
			entity.UTENTE1 = this;
		}
		
		private void detach_INTERAZIONE(INTERAZIONE entity)
		{
			this.SendPropertyChanging();
			entity.UTENTE1 = null;
		}
		
		private void attach_ESERCIZIO(ESERCIZIO entity)
		{
			this.SendPropertyChanging();
			entity.UTENTE = this;
		}
		
		private void detach_ESERCIZIO(ESERCIZIO entity)
		{
			this.SendPropertyChanging();
			entity.UTENTE = null;
		}
		
		private void attach_AMICIZIA(AMICIZIA entity)
		{
			this.SendPropertyChanging();
			entity.UTENTE = this;
		}
		
		private void detach_AMICIZIA(AMICIZIA entity)
		{
			this.SendPropertyChanging();
			entity.UTENTE = null;
		}
		
		private void attach_AMICIZIA1(AMICIZIA entity)
		{
			this.SendPropertyChanging();
			entity.UTENTE1 = this;
		}
		
		private void detach_AMICIZIA1(AMICIZIA entity)
		{
			this.SendPropertyChanging();
			entity.UTENTE1 = null;
		}
		
		private void attach_ALLENAMENTO(ALLENAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.UTENTE1 = this;
		}
		
		private void detach_ALLENAMENTO(ALLENAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.UTENTE1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.POST")]
	public partial class POST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDpost;
		
		private int _AllenamentoCollegato;
		
		private System.DateTime _DataPubblicazione;
		
		private string _Titolo;
		
		private string _Didascalia;
		
		private int _Autore;
		
		private EntitySet<INTERAZIONE> _INTERAZIONE;
		
		private EntityRef<UTENTE> _UTENTE;
		
		private EntityRef<ALLENAMENTO> _ALLENAMENTO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDpostChanging(int value);
    partial void OnIDpostChanged();
    partial void OnAllenamentoCollegatoChanging(int value);
    partial void OnAllenamentoCollegatoChanged();
    partial void OnDataPubblicazioneChanging(System.DateTime value);
    partial void OnDataPubblicazioneChanged();
    partial void OnTitoloChanging(string value);
    partial void OnTitoloChanged();
    partial void OnDidascaliaChanging(string value);
    partial void OnDidascaliaChanged();
    partial void OnAutoreChanging(int value);
    partial void OnAutoreChanged();
    #endregion
		
		public POST()
		{
			this._INTERAZIONE = new EntitySet<INTERAZIONE>(new Action<INTERAZIONE>(this.attach_INTERAZIONE), new Action<INTERAZIONE>(this.detach_INTERAZIONE));
			this._UTENTE = default(EntityRef<UTENTE>);
			this._ALLENAMENTO = default(EntityRef<ALLENAMENTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDpost", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDpost
		{
			get
			{
				return this._IDpost;
			}
			set
			{
				if ((this._IDpost != value))
				{
					this.OnIDpostChanging(value);
					this.SendPropertyChanging();
					this._IDpost = value;
					this.SendPropertyChanged("IDpost");
					this.OnIDpostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllenamentoCollegato", DbType="Int NOT NULL")]
		public int AllenamentoCollegato
		{
			get
			{
				return this._AllenamentoCollegato;
			}
			set
			{
				if ((this._AllenamentoCollegato != value))
				{
					if (this._ALLENAMENTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAllenamentoCollegatoChanging(value);
					this.SendPropertyChanging();
					this._AllenamentoCollegato = value;
					this.SendPropertyChanged("AllenamentoCollegato");
					this.OnAllenamentoCollegatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataPubblicazione", DbType="Date NOT NULL")]
		public System.DateTime DataPubblicazione
		{
			get
			{
				return this._DataPubblicazione;
			}
			set
			{
				if ((this._DataPubblicazione != value))
				{
					this.OnDataPubblicazioneChanging(value);
					this.SendPropertyChanging();
					this._DataPubblicazione = value;
					this.SendPropertyChanged("DataPubblicazione");
					this.OnDataPubblicazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titolo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Titolo
		{
			get
			{
				return this._Titolo;
			}
			set
			{
				if ((this._Titolo != value))
				{
					this.OnTitoloChanging(value);
					this.SendPropertyChanging();
					this._Titolo = value;
					this.SendPropertyChanged("Titolo");
					this.OnTitoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Didascalia", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Didascalia
		{
			get
			{
				return this._Didascalia;
			}
			set
			{
				if ((this._Didascalia != value))
				{
					this.OnDidascaliaChanging(value);
					this.SendPropertyChanging();
					this._Didascalia = value;
					this.SendPropertyChanged("Didascalia");
					this.OnDidascaliaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Autore", DbType="Int NOT NULL")]
		public int Autore
		{
			get
			{
				return this._Autore;
			}
			set
			{
				if ((this._Autore != value))
				{
					if (this._UTENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAutoreChanging(value);
					this.SendPropertyChanging();
					this._Autore = value;
					this.SendPropertyChanged("Autore");
					this.OnAutoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="POST_INTERAZIONE", Storage="_INTERAZIONE", ThisKey="IDpost", OtherKey="Post")]
		public EntitySet<INTERAZIONE> INTERAZIONE
		{
			get
			{
				return this._INTERAZIONE;
			}
			set
			{
				this._INTERAZIONE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTENTE_POST", Storage="_UTENTE", ThisKey="Autore", OtherKey="IDutente", IsForeignKey=true)]
		public UTENTE UTENTE
		{
			get
			{
				return this._UTENTE.Entity;
			}
			set
			{
				UTENTE previousValue = this._UTENTE.Entity;
				if (((previousValue != value) 
							|| (this._UTENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTENTE.Entity = null;
						previousValue.POST.Remove(this);
					}
					this._UTENTE.Entity = value;
					if ((value != null))
					{
						value.POST.Add(this);
						this._Autore = value.IDutente;
					}
					else
					{
						this._Autore = default(int);
					}
					this.SendPropertyChanged("UTENTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ALLENAMENTO_POST", Storage="_ALLENAMENTO", ThisKey="AllenamentoCollegato", OtherKey="CodiceAllenamento", IsForeignKey=true)]
		public ALLENAMENTO ALLENAMENTO
		{
			get
			{
				return this._ALLENAMENTO.Entity;
			}
			set
			{
				ALLENAMENTO previousValue = this._ALLENAMENTO.Entity;
				if (((previousValue != value) 
							|| (this._ALLENAMENTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ALLENAMENTO.Entity = null;
						previousValue.POST.Remove(this);
					}
					this._ALLENAMENTO.Entity = value;
					if ((value != null))
					{
						value.POST.Add(this);
						this._AllenamentoCollegato = value.CodiceAllenamento;
					}
					else
					{
						this._AllenamentoCollegato = default(int);
					}
					this.SendPropertyChanged("ALLENAMENTO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INTERAZIONE(INTERAZIONE entity)
		{
			this.SendPropertyChanging();
			entity.POST1 = this;
		}
		
		private void detach_INTERAZIONE(INTERAZIONE entity)
		{
			this.SendPropertyChanging();
			entity.POST1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MISURAZIONE_CORPOREA")]
	public partial class MISURAZIONE_CORPOREA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Utente;
		
		private System.DateTime _DataMisurazione;
		
		private double _Peso;
		
		private double _Altezza;
		
		private System.Nullable<double> _CirconferenzaVita;
		
		private System.Nullable<double> _CirconferenzaBraccia;
		
		private System.Nullable<double> _CirconferenzaGambe;
		
		private EntityRef<UTENTE> _UTENTE1;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUtenteChanging(int value);
    partial void OnUtenteChanged();
    partial void OnDataMisurazioneChanging(System.DateTime value);
    partial void OnDataMisurazioneChanged();
    partial void OnPesoChanging(double value);
    partial void OnPesoChanged();
    partial void OnAltezzaChanging(double value);
    partial void OnAltezzaChanged();
    partial void OnCirconferenzaVitaChanging(System.Nullable<double> value);
    partial void OnCirconferenzaVitaChanged();
    partial void OnCirconferenzaBracciaChanging(System.Nullable<double> value);
    partial void OnCirconferenzaBracciaChanged();
    partial void OnCirconferenzaGambeChanging(System.Nullable<double> value);
    partial void OnCirconferenzaGambeChanged();
    #endregion
		
		public MISURAZIONE_CORPOREA()
		{
			this._UTENTE1 = default(EntityRef<UTENTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Utente", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Utente
		{
			get
			{
				return this._Utente;
			}
			set
			{
				if ((this._Utente != value))
				{
					if (this._UTENTE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUtenteChanging(value);
					this.SendPropertyChanging();
					this._Utente = value;
					this.SendPropertyChanged("Utente");
					this.OnUtenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataMisurazione", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DataMisurazione
		{
			get
			{
				return this._DataMisurazione;
			}
			set
			{
				if ((this._DataMisurazione != value))
				{
					this.OnDataMisurazioneChanging(value);
					this.SendPropertyChanging();
					this._DataMisurazione = value;
					this.SendPropertyChanged("DataMisurazione");
					this.OnDataMisurazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Peso", DbType="Float NOT NULL")]
		public double Peso
		{
			get
			{
				return this._Peso;
			}
			set
			{
				if ((this._Peso != value))
				{
					this.OnPesoChanging(value);
					this.SendPropertyChanging();
					this._Peso = value;
					this.SendPropertyChanged("Peso");
					this.OnPesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Altezza", DbType="Float NOT NULL")]
		public double Altezza
		{
			get
			{
				return this._Altezza;
			}
			set
			{
				if ((this._Altezza != value))
				{
					this.OnAltezzaChanging(value);
					this.SendPropertyChanging();
					this._Altezza = value;
					this.SendPropertyChanged("Altezza");
					this.OnAltezzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CirconferenzaVita", DbType="Float")]
		public System.Nullable<double> CirconferenzaVita
		{
			get
			{
				return this._CirconferenzaVita;
			}
			set
			{
				if ((this._CirconferenzaVita != value))
				{
					this.OnCirconferenzaVitaChanging(value);
					this.SendPropertyChanging();
					this._CirconferenzaVita = value;
					this.SendPropertyChanged("CirconferenzaVita");
					this.OnCirconferenzaVitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CirconferenzaBraccia", DbType="Float")]
		public System.Nullable<double> CirconferenzaBraccia
		{
			get
			{
				return this._CirconferenzaBraccia;
			}
			set
			{
				if ((this._CirconferenzaBraccia != value))
				{
					this.OnCirconferenzaBracciaChanging(value);
					this.SendPropertyChanging();
					this._CirconferenzaBraccia = value;
					this.SendPropertyChanged("CirconferenzaBraccia");
					this.OnCirconferenzaBracciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CirconferenzaGambe", DbType="Float")]
		public System.Nullable<double> CirconferenzaGambe
		{
			get
			{
				return this._CirconferenzaGambe;
			}
			set
			{
				if ((this._CirconferenzaGambe != value))
				{
					this.OnCirconferenzaGambeChanging(value);
					this.SendPropertyChanging();
					this._CirconferenzaGambe = value;
					this.SendPropertyChanged("CirconferenzaGambe");
					this.OnCirconferenzaGambeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTENTE_MISURAZIONE_CORPOREA", Storage="_UTENTE1", ThisKey="Utente", OtherKey="IDutente", IsForeignKey=true)]
		public UTENTE UTENTE1
		{
			get
			{
				return this._UTENTE1.Entity;
			}
			set
			{
				UTENTE previousValue = this._UTENTE1.Entity;
				if (((previousValue != value) 
							|| (this._UTENTE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTENTE1.Entity = null;
						previousValue.MISURAZIONE_CORPOREA.Remove(this);
					}
					this._UTENTE1.Entity = value;
					if ((value != null))
					{
						value.MISURAZIONE_CORPOREA.Add(this);
						this._Utente = value.IDutente;
					}
					else
					{
						this._Utente = default(int);
					}
					this.SendPropertyChanged("UTENTE1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MEDICO")]
	public partial class MEDICO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CF;
		
		private string _Nome;
		
		private string _Cognome;
		
		private string _Email;
		
		private string _NumeroTelefono;
		
		private string _Specializzazione;
		
		private EntitySet<VISITA> _VISITA;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCFChanging(string value);
    partial void OnCFChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNumeroTelefonoChanging(string value);
    partial void OnNumeroTelefonoChanged();
    partial void OnSpecializzazioneChanging(string value);
    partial void OnSpecializzazioneChanged();
    #endregion
		
		public MEDICO()
		{
			this._VISITA = new EntitySet<VISITA>(new Action<VISITA>(this.attach_VISITA), new Action<VISITA>(this.detach_VISITA));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CF
		{
			get
			{
				return this._CF;
			}
			set
			{
				if ((this._CF != value))
				{
					this.OnCFChanging(value);
					this.SendPropertyChanging();
					this._CF = value;
					this.SendPropertyChanged("CF");
					this.OnCFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroTelefono", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string NumeroTelefono
		{
			get
			{
				return this._NumeroTelefono;
			}
			set
			{
				if ((this._NumeroTelefono != value))
				{
					this.OnNumeroTelefonoChanging(value);
					this.SendPropertyChanging();
					this._NumeroTelefono = value;
					this.SendPropertyChanged("NumeroTelefono");
					this.OnNumeroTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specializzazione", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Specializzazione
		{
			get
			{
				return this._Specializzazione;
			}
			set
			{
				if ((this._Specializzazione != value))
				{
					this.OnSpecializzazioneChanging(value);
					this.SendPropertyChanging();
					this._Specializzazione = value;
					this.SendPropertyChanged("Specializzazione");
					this.OnSpecializzazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEDICO_VISITA", Storage="_VISITA", ThisKey="CF", OtherKey="Medico")]
		public EntitySet<VISITA> VISITA
		{
			get
			{
				return this._VISITA;
			}
			set
			{
				this._VISITA.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VISITA(VISITA entity)
		{
			this.SendPropertyChanging();
			entity.MEDICO1 = this;
		}
		
		private void detach_VISITA(VISITA entity)
		{
			this.SendPropertyChanging();
			entity.MEDICO1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INTERAZIONE")]
	public partial class INTERAZIONE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDinterazione;
		
		private string _TipoInterazione;
		
		private string _Testo;
		
		private System.DateTime _Data;
		
		private int _Utente;
		
		private int _Post;
		
		private EntityRef<POST> _POST1;
		
		private EntityRef<UTENTE> _UTENTE1;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDinterazioneChanging(int value);
    partial void OnIDinterazioneChanged();
    partial void OnTipoInterazioneChanging(string value);
    partial void OnTipoInterazioneChanged();
    partial void OnTestoChanging(string value);
    partial void OnTestoChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnUtenteChanging(int value);
    partial void OnUtenteChanged();
    partial void OnPostChanging(int value);
    partial void OnPostChanged();
    #endregion
		
		public INTERAZIONE()
		{
			this._POST1 = default(EntityRef<POST>);
			this._UTENTE1 = default(EntityRef<UTENTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDinterazione", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDinterazione
		{
			get
			{
				return this._IDinterazione;
			}
			set
			{
				if ((this._IDinterazione != value))
				{
					this.OnIDinterazioneChanging(value);
					this.SendPropertyChanging();
					this._IDinterazione = value;
					this.SendPropertyChanged("IDinterazione");
					this.OnIDinterazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoInterazione", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string TipoInterazione
		{
			get
			{
				return this._TipoInterazione;
			}
			set
			{
				if ((this._TipoInterazione != value))
				{
					this.OnTipoInterazioneChanging(value);
					this.SendPropertyChanging();
					this._TipoInterazione = value;
					this.SendPropertyChanged("TipoInterazione");
					this.OnTipoInterazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Testo", DbType="VarChar(200)")]
		public string Testo
		{
			get
			{
				return this._Testo;
			}
			set
			{
				if ((this._Testo != value))
				{
					this.OnTestoChanging(value);
					this.SendPropertyChanging();
					this._Testo = value;
					this.SendPropertyChanged("Testo");
					this.OnTestoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Utente", DbType="Int NOT NULL")]
		public int Utente
		{
			get
			{
				return this._Utente;
			}
			set
			{
				if ((this._Utente != value))
				{
					if (this._UTENTE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUtenteChanging(value);
					this.SendPropertyChanging();
					this._Utente = value;
					this.SendPropertyChanged("Utente");
					this.OnUtenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post", DbType="Int NOT NULL")]
		public int Post
		{
			get
			{
				return this._Post;
			}
			set
			{
				if ((this._Post != value))
				{
					if (this._POST1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostChanging(value);
					this.SendPropertyChanging();
					this._Post = value;
					this.SendPropertyChanged("Post");
					this.OnPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="POST_INTERAZIONE", Storage="_POST1", ThisKey="Post", OtherKey="IDpost", IsForeignKey=true)]
		public POST POST1
		{
			get
			{
				return this._POST1.Entity;
			}
			set
			{
				POST previousValue = this._POST1.Entity;
				if (((previousValue != value) 
							|| (this._POST1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POST1.Entity = null;
						previousValue.INTERAZIONE.Remove(this);
					}
					this._POST1.Entity = value;
					if ((value != null))
					{
						value.INTERAZIONE.Add(this);
						this._Post = value.IDpost;
					}
					else
					{
						this._Post = default(int);
					}
					this.SendPropertyChanged("POST1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTENTE_INTERAZIONE", Storage="_UTENTE1", ThisKey="Utente", OtherKey="IDutente", IsForeignKey=true)]
		public UTENTE UTENTE1
		{
			get
			{
				return this._UTENTE1.Entity;
			}
			set
			{
				UTENTE previousValue = this._UTENTE1.Entity;
				if (((previousValue != value) 
							|| (this._UTENTE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTENTE1.Entity = null;
						previousValue.INTERAZIONE.Remove(this);
					}
					this._UTENTE1.Entity = value;
					if ((value != null))
					{
						value.INTERAZIONE.Add(this);
						this._Utente = value.IDutente;
					}
					else
					{
						this._Utente = default(int);
					}
					this.SendPropertyChanged("UTENTE1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ESERCIZIO")]
	public partial class ESERCIZIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nome;
		
		private string _GruppoMuscolare;
		
		private string _Descrizione;
		
		private int _Creatore;
		
		private EntitySet<AGGIUNTA> _AGGIUNTA;
		
		private EntityRef<UTENTE> _UTENTE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnGruppoMuscolareChanging(string value);
    partial void OnGruppoMuscolareChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnCreatoreChanging(int value);
    partial void OnCreatoreChanged();
    #endregion
		
		public ESERCIZIO()
		{
			this._AGGIUNTA = new EntitySet<AGGIUNTA>(new Action<AGGIUNTA>(this.attach_AGGIUNTA), new Action<AGGIUNTA>(this.detach_AGGIUNTA));
			this._UTENTE = default(EntityRef<UTENTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GruppoMuscolare", DbType="VarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string GruppoMuscolare
		{
			get
			{
				return this._GruppoMuscolare;
			}
			set
			{
				if ((this._GruppoMuscolare != value))
				{
					this.OnGruppoMuscolareChanging(value);
					this.SendPropertyChanging();
					this._GruppoMuscolare = value;
					this.SendPropertyChanged("GruppoMuscolare");
					this.OnGruppoMuscolareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creatore", DbType="Int NOT NULL")]
		public int Creatore
		{
			get
			{
				return this._Creatore;
			}
			set
			{
				if ((this._Creatore != value))
				{
					if (this._UTENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatoreChanging(value);
					this.SendPropertyChanging();
					this._Creatore = value;
					this.SendPropertyChanged("Creatore");
					this.OnCreatoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESERCIZIO_AGGIUNTA", Storage="_AGGIUNTA", ThisKey="Nome,GruppoMuscolare", OtherKey="NomeEsercizio,GruppoMuscolareEsercizio")]
		public EntitySet<AGGIUNTA> AGGIUNTA
		{
			get
			{
				return this._AGGIUNTA;
			}
			set
			{
				this._AGGIUNTA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTENTE_ESERCIZIO", Storage="_UTENTE", ThisKey="Creatore", OtherKey="IDutente", IsForeignKey=true)]
		public UTENTE UTENTE
		{
			get
			{
				return this._UTENTE.Entity;
			}
			set
			{
				UTENTE previousValue = this._UTENTE.Entity;
				if (((previousValue != value) 
							|| (this._UTENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTENTE.Entity = null;
						previousValue.ESERCIZIO.Remove(this);
					}
					this._UTENTE.Entity = value;
					if ((value != null))
					{
						value.ESERCIZIO.Add(this);
						this._Creatore = value.IDutente;
					}
					else
					{
						this._Creatore = default(int);
					}
					this.SendPropertyChanged("UTENTE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AGGIUNTA(AGGIUNTA entity)
		{
			this.SendPropertyChanging();
			entity.ESERCIZIO = this;
		}
		
		private void detach_AGGIUNTA(AGGIUNTA entity)
		{
			this.SendPropertyChanging();
			entity.ESERCIZIO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AMICIZIA")]
	public partial class AMICIZIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Richiedente;
		
		private int _Ricevente;
		
		private string _StatoAmicizia;
		
		private EntityRef<UTENTE> _UTENTE;
		
		private EntityRef<UTENTE> _UTENTE1;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRichiedenteChanging(int value);
    partial void OnRichiedenteChanged();
    partial void OnRiceventeChanging(int value);
    partial void OnRiceventeChanged();
    partial void OnStatoAmiciziaChanging(string value);
    partial void OnStatoAmiciziaChanged();
    #endregion
		
		public AMICIZIA()
		{
			this._UTENTE = default(EntityRef<UTENTE>);
			this._UTENTE1 = default(EntityRef<UTENTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Richiedente", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Richiedente
		{
			get
			{
				return this._Richiedente;
			}
			set
			{
				if ((this._Richiedente != value))
				{
					if (this._UTENTE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRichiedenteChanging(value);
					this.SendPropertyChanging();
					this._Richiedente = value;
					this.SendPropertyChanged("Richiedente");
					this.OnRichiedenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ricevente", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Ricevente
		{
			get
			{
				return this._Ricevente;
			}
			set
			{
				if ((this._Ricevente != value))
				{
					if (this._UTENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRiceventeChanging(value);
					this.SendPropertyChanging();
					this._Ricevente = value;
					this.SendPropertyChanged("Ricevente");
					this.OnRiceventeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatoAmicizia", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StatoAmicizia
		{
			get
			{
				return this._StatoAmicizia;
			}
			set
			{
				if ((this._StatoAmicizia != value))
				{
					this.OnStatoAmiciziaChanging(value);
					this.SendPropertyChanging();
					this._StatoAmicizia = value;
					this.SendPropertyChanged("StatoAmicizia");
					this.OnStatoAmiciziaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTENTE_AMICIZIA", Storage="_UTENTE", ThisKey="Ricevente", OtherKey="IDutente", IsForeignKey=true)]
		public UTENTE UTENTE
		{
			get
			{
				return this._UTENTE.Entity;
			}
			set
			{
				UTENTE previousValue = this._UTENTE.Entity;
				if (((previousValue != value) 
							|| (this._UTENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTENTE.Entity = null;
						previousValue.AMICIZIA.Remove(this);
					}
					this._UTENTE.Entity = value;
					if ((value != null))
					{
						value.AMICIZIA.Add(this);
						this._Ricevente = value.IDutente;
					}
					else
					{
						this._Ricevente = default(int);
					}
					this.SendPropertyChanged("UTENTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTENTE_AMICIZIA1", Storage="_UTENTE1", ThisKey="Richiedente", OtherKey="IDutente", IsForeignKey=true)]
		public UTENTE UTENTE1
		{
			get
			{
				return this._UTENTE1.Entity;
			}
			set
			{
				UTENTE previousValue = this._UTENTE1.Entity;
				if (((previousValue != value) 
							|| (this._UTENTE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTENTE1.Entity = null;
						previousValue.AMICIZIA1.Remove(this);
					}
					this._UTENTE1.Entity = value;
					if ((value != null))
					{
						value.AMICIZIA1.Add(this);
						this._Richiedente = value.IDutente;
					}
					else
					{
						this._Richiedente = default(int);
					}
					this.SendPropertyChanged("UTENTE1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ALLENAMENTO")]
	public partial class ALLENAMENTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodiceAllenamento;
		
		private string _Titolo;
		
		private System.DateTime _DataAllenamento;
		
		private int _Durata;
		
		private string _LivelloIntensità;
		
		private int _Utente;
		
		private EntitySet<AGGIUNTA> _AGGIUNTA;
		
		private EntitySet<POST> _POST;
		
		private EntityRef<UTENTE> _UTENTE1;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceAllenamentoChanging(int value);
    partial void OnCodiceAllenamentoChanged();
    partial void OnTitoloChanging(string value);
    partial void OnTitoloChanged();
    partial void OnDataAllenamentoChanging(System.DateTime value);
    partial void OnDataAllenamentoChanged();
    partial void OnDurataChanging(int value);
    partial void OnDurataChanged();
    partial void OnLivelloIntensitàChanging(string value);
    partial void OnLivelloIntensitàChanged();
    partial void OnUtenteChanging(int value);
    partial void OnUtenteChanged();
    #endregion
		
		public ALLENAMENTO()
		{
			this._AGGIUNTA = new EntitySet<AGGIUNTA>(new Action<AGGIUNTA>(this.attach_AGGIUNTA), new Action<AGGIUNTA>(this.detach_AGGIUNTA));
			this._POST = new EntitySet<POST>(new Action<POST>(this.attach_POST), new Action<POST>(this.detach_POST));
			this._UTENTE1 = default(EntityRef<UTENTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceAllenamento", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CodiceAllenamento
		{
			get
			{
				return this._CodiceAllenamento;
			}
			set
			{
				if ((this._CodiceAllenamento != value))
				{
					this.OnCodiceAllenamentoChanging(value);
					this.SendPropertyChanging();
					this._CodiceAllenamento = value;
					this.SendPropertyChanged("CodiceAllenamento");
					this.OnCodiceAllenamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titolo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Titolo
		{
			get
			{
				return this._Titolo;
			}
			set
			{
				if ((this._Titolo != value))
				{
					this.OnTitoloChanging(value);
					this.SendPropertyChanging();
					this._Titolo = value;
					this.SendPropertyChanged("Titolo");
					this.OnTitoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataAllenamento", DbType="Date NOT NULL")]
		public System.DateTime DataAllenamento
		{
			get
			{
				return this._DataAllenamento;
			}
			set
			{
				if ((this._DataAllenamento != value))
				{
					this.OnDataAllenamentoChanging(value);
					this.SendPropertyChanging();
					this._DataAllenamento = value;
					this.SendPropertyChanged("DataAllenamento");
					this.OnDataAllenamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Durata", DbType="Int NOT NULL")]
		public int Durata
		{
			get
			{
				return this._Durata;
			}
			set
			{
				if ((this._Durata != value))
				{
					this.OnDurataChanging(value);
					this.SendPropertyChanging();
					this._Durata = value;
					this.SendPropertyChanged("Durata");
					this.OnDurataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LivelloIntensità", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string LivelloIntensità
		{
			get
			{
				return this._LivelloIntensità;
			}
			set
			{
				if ((this._LivelloIntensità != value))
				{
					this.OnLivelloIntensitàChanging(value);
					this.SendPropertyChanging();
					this._LivelloIntensità = value;
					this.SendPropertyChanged("LivelloIntensità");
					this.OnLivelloIntensitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Utente", DbType="Int NOT NULL")]
		public int Utente
		{
			get
			{
				return this._Utente;
			}
			set
			{
				if ((this._Utente != value))
				{
					if (this._UTENTE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUtenteChanging(value);
					this.SendPropertyChanging();
					this._Utente = value;
					this.SendPropertyChanged("Utente");
					this.OnUtenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ALLENAMENTO_AGGIUNTA", Storage="_AGGIUNTA", ThisKey="CodiceAllenamento", OtherKey="CodiceAllenamento")]
		public EntitySet<AGGIUNTA> AGGIUNTA
		{
			get
			{
				return this._AGGIUNTA;
			}
			set
			{
				this._AGGIUNTA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ALLENAMENTO_POST", Storage="_POST", ThisKey="CodiceAllenamento", OtherKey="AllenamentoCollegato")]
		public EntitySet<POST> POST
		{
			get
			{
				return this._POST;
			}
			set
			{
				this._POST.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTENTE_ALLENAMENTO", Storage="_UTENTE1", ThisKey="Utente", OtherKey="IDutente", IsForeignKey=true)]
		public UTENTE UTENTE1
		{
			get
			{
				return this._UTENTE1.Entity;
			}
			set
			{
				UTENTE previousValue = this._UTENTE1.Entity;
				if (((previousValue != value) 
							|| (this._UTENTE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTENTE1.Entity = null;
						previousValue.ALLENAMENTO.Remove(this);
					}
					this._UTENTE1.Entity = value;
					if ((value != null))
					{
						value.ALLENAMENTO.Add(this);
						this._Utente = value.IDutente;
					}
					else
					{
						this._Utente = default(int);
					}
					this.SendPropertyChanged("UTENTE1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AGGIUNTA(AGGIUNTA entity)
		{
			this.SendPropertyChanging();
			entity.ALLENAMENTO = this;
		}
		
		private void detach_AGGIUNTA(AGGIUNTA entity)
		{
			this.SendPropertyChanging();
			entity.ALLENAMENTO = null;
		}
		
		private void attach_POST(POST entity)
		{
			this.SendPropertyChanging();
			entity.ALLENAMENTO = this;
		}
		
		private void detach_POST(POST entity)
		{
			this.SendPropertyChanging();
			entity.ALLENAMENTO = null;
		}
	}
}
#pragma warning restore 1591
